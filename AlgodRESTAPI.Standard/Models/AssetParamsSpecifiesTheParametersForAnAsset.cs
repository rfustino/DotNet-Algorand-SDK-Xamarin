/*
 * AlgodRESTAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using AlgodRESTAPI.Standard;
using AlgodRESTAPI.Standard.Utilities;


namespace AlgodRESTAPI.Standard.Models
{
    public class AssetParamsSpecifiesTheParametersForAnAsset : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string assetname;
        private string clawbackaddr;
        private string creator;
        private bool? defaultfrozen;
        private string freezeaddr;
        private string managerkey;
        private string metadatahash;
        private string reserveaddr;
        private int total;
        private string unitname;
        private string url;

        /// <summary>
        /// AssetName specifies the name of this asset,
        /// as supplied by the creator.
        /// </summary>
        [JsonProperty("assetname")]
        public string Assetname 
        { 
            get 
            {
                return this.assetname; 
            } 
            set 
            {
                this.assetname = value;
                onPropertyChanged("Assetname");
            }
        }

        /// <summary>
        /// ClawbackAddr specifies the address used to clawback holdings of
        /// this asset.  If empty, clawback is not permitted.
        /// </summary>
        [JsonProperty("clawbackaddr")]
        public string Clawbackaddr 
        { 
            get 
            {
                return this.clawbackaddr; 
            } 
            set 
            {
                this.clawbackaddr = value;
                onPropertyChanged("Clawbackaddr");
            }
        }

        /// <summary>
        /// Creator specifies the address that created this asset.
        /// This is the address where the parameters for this asset
        /// can be found, and also the address where unwanted asset
        /// units can be sent in the worst case.
        /// </summary>
        [JsonProperty("creator")]
        public string Creator 
        { 
            get 
            {
                return this.creator; 
            } 
            set 
            {
                this.creator = value;
                onPropertyChanged("Creator");
            }
        }

        /// <summary>
        /// DefaultFrozen specifies whether holdings in this asset
        /// are frozen by default.
        /// </summary>
        [JsonProperty("defaultfrozen")]
        public bool? Defaultfrozen 
        { 
            get 
            {
                return this.defaultfrozen; 
            } 
            set 
            {
                this.defaultfrozen = value;
                onPropertyChanged("Defaultfrozen");
            }
        }

        /// <summary>
        /// FreezeAddr specifies the address used to freeze holdings of
        /// this asset.  If empty, freezing is not permitted.
        /// </summary>
        [JsonProperty("freezeaddr")]
        public string Freezeaddr 
        { 
            get 
            {
                return this.freezeaddr; 
            } 
            set 
            {
                this.freezeaddr = value;
                onPropertyChanged("Freezeaddr");
            }
        }

        /// <summary>
        /// ManagerAddr specifies the address used to manage the keys of this
        /// asset and to destroy it.
        /// </summary>
        [JsonProperty("managerkey")]
        public string Managerkey 
        { 
            get 
            {
                return this.managerkey; 
            } 
            set 
            {
                this.managerkey = value;
                onPropertyChanged("Managerkey");
            }
        }

        /// <summary>
        /// MetadataHash specifies a commitment to some unspecified asset
        /// metadata. The format of this metadata is up to the application.
        /// </summary>
        [JsonProperty("metadatahash")]
        public string Metadatahash 
        { 
            get 
            {
                return this.metadatahash; 
            } 
            set 
            {
                this.metadatahash = value;
                onPropertyChanged("Metadatahash");
            }
        }

        /// <summary>
        /// ReserveAddr specifies the address holding reserve (non-minted)
        /// units of this asset.
        /// </summary>
        [JsonProperty("reserveaddr")]
        public string Reserveaddr 
        { 
            get 
            {
                return this.reserveaddr; 
            } 
            set 
            {
                this.reserveaddr = value;
                onPropertyChanged("Reserveaddr");
            }
        }

        /// <summary>
        /// Total specifies the total number of units of this asset.
        /// </summary>
        [JsonProperty("total")]
        public int Total 
        { 
            get 
            {
                return this.total; 
            } 
            set 
            {
                this.total = value;
                onPropertyChanged("Total");
            }
        }

        /// <summary>
        /// UnitName specifies the name of a unit of this asset,
        /// as supplied by the creator.
        /// </summary>
        [JsonProperty("unitname")]
        public string Unitname 
        { 
            get 
            {
                return this.unitname; 
            } 
            set 
            {
                this.unitname = value;
                onPropertyChanged("Unitname");
            }
        }

        /// <summary>
        /// URL specifies a URL where more information about the asset can be
        /// retrieved
        /// </summary>
        [JsonProperty("url")]
        public string Url 
        { 
            get 
            {
                return this.url; 
            } 
            set 
            {
                this.url = value;
                onPropertyChanged("Url");
            }
        }
    }
} 