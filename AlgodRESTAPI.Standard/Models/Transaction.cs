/*
 * AlgodRESTAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using AlgodRESTAPI.Standard;
using AlgodRESTAPI.Standard.Utilities;


namespace AlgodRESTAPI.Standard.Models
{
    public class Transaction : BaseModel 
    {
        // These fields hold the values for the public properties.
        private Models.AssetConfigTransactionType curcfg;
        private Models.AssetFreezeTransactionType curfrz;
        private Models.AssetTransferTransactionType curxfer;
        private int fee;
        private int firstRound;
        private string mfrom;
        private int? fromrewards;
        private string genesisID;
        private string genesishashb64;
        private string mgroup;
        private Models.KeyregTransactionType keyreg;
        private int lastRound;
        private string noteb64;
        private Models.PaymentTransactionType payment;
        private string poolerror;
        private int? round;
        private string tx;
        private Models.TransactionResults txresults;
        private string type;

        /// <summary>
        /// AssetConfigTransactionType contains the additional fields for an asset config transaction
        /// </summary>
        [JsonProperty("curcfg")]
        public Models.AssetConfigTransactionType Curcfg 
        { 
            get 
            {
                return this.curcfg; 
            } 
            set 
            {
                this.curcfg = value;
                onPropertyChanged("Curcfg");
            }
        }

        /// <summary>
        /// AssetFreezeTransactionType contains the additional fields for an asset freeze transaction
        /// </summary>
        [JsonProperty("curfrz")]
        public Models.AssetFreezeTransactionType Curfrz 
        { 
            get 
            {
                return this.curfrz; 
            } 
            set 
            {
                this.curfrz = value;
                onPropertyChanged("Curfrz");
            }
        }

        /// <summary>
        /// AssetTransferTransactionType contains the additional fields for an asset transfer transaction
        /// </summary>
        [JsonProperty("curxfer")]
        public Models.AssetTransferTransactionType Curxfer 
        { 
            get 
            {
                return this.curxfer; 
            } 
            set 
            {
                this.curxfer = value;
                onPropertyChanged("Curxfer");
            }
        }

        /// <summary>
        /// Fee is the transaction fee
        /// </summary>
        [JsonProperty("fee")]
        public int Fee 
        { 
            get 
            {
                return this.fee; 
            } 
            set 
            {
                this.fee = value;
                onPropertyChanged("Fee");
            }
        }

        /// <summary>
        /// FirstRound indicates the first valid round for this transaction
        /// </summary>
        [JsonProperty("first-round")]
        public int FirstRound 
        { 
            get 
            {
                return this.firstRound; 
            } 
            set 
            {
                this.firstRound = value;
                onPropertyChanged("FirstRound");
            }
        }

        /// <summary>
        /// From is the sender's address
        /// </summary>
        [JsonProperty("from")]
        public string From 
        { 
            get 
            {
                return this.mfrom; 
            } 
            set 
            {
                this.mfrom = value;
                onPropertyChanged("From");
            }
        }

        /// <summary>
        /// FromRewards is the amount of pending rewards applied to the From
        /// account as part of this transaction.
        /// </summary>
        [JsonProperty("fromrewards")]
        public int? Fromrewards 
        { 
            get 
            {
                return this.fromrewards; 
            } 
            set 
            {
                this.fromrewards = value;
                onPropertyChanged("Fromrewards");
            }
        }

        /// <summary>
        /// Genesis ID
        /// </summary>
        [JsonProperty("genesisID")]
        public string GenesisID 
        { 
            get 
            {
                return this.genesisID; 
            } 
            set 
            {
                this.genesisID = value;
                onPropertyChanged("GenesisID");
            }
        }

        /// <summary>
        /// Genesis hash
        /// </summary>
        [JsonProperty("genesishashb64")]
        public string Genesishashb64 
        { 
            get 
            {
                return this.genesishashb64; 
            } 
            set 
            {
                this.genesishashb64 = value;
                onPropertyChanged("Genesishashb64");
            }
        }

        /// <summary>
        /// Group
        /// </summary>
        [JsonProperty("group")]
        public string Group 
        { 
            get 
            {
                return this.mgroup; 
            } 
            set 
            {
                this.mgroup = value;
                onPropertyChanged("Group");
            }
        }

        /// <summary>
        /// KeyregTransactionType contains the additional fields for a keyreg Transaction
        /// </summary>
        [JsonProperty("keyreg")]
        public Models.KeyregTransactionType Keyreg 
        { 
            get 
            {
                return this.keyreg; 
            } 
            set 
            {
                this.keyreg = value;
                onPropertyChanged("Keyreg");
            }
        }

        /// <summary>
        /// LastRound indicates the last valid round for this transaction
        /// </summary>
        [JsonProperty("last-round")]
        public int LastRound 
        { 
            get 
            {
                return this.lastRound; 
            } 
            set 
            {
                this.lastRound = value;
                onPropertyChanged("LastRound");
            }
        }

        /// <summary>
        /// Note is a free form data
        /// </summary>
        [JsonProperty("noteb64")]
        public string Noteb64 
        { 
            get 
            {
                return this.noteb64; 
            } 
            set 
            {
                this.noteb64 = value;
                onPropertyChanged("Noteb64");
            }
        }

        /// <summary>
        /// PaymentTransactionType contains the additional fields for a payment Transaction
        /// </summary>
        [JsonProperty("payment")]
        public Models.PaymentTransactionType Payment 
        { 
            get 
            {
                return this.payment; 
            } 
            set 
            {
                this.payment = value;
                onPropertyChanged("Payment");
            }
        }

        /// <summary>
        /// PoolError indicates the transaction was evicted from this node's transaction
        /// pool (if non-empty).  A non-empty PoolError does not guarantee that the
        /// transaction will never be committed; other nodes may not have evicted the
        /// transaction and may attempt to commit it in the future.
        /// </summary>
        [JsonProperty("poolerror")]
        public string Poolerror 
        { 
            get 
            {
                return this.poolerror; 
            } 
            set 
            {
                this.poolerror = value;
                onPropertyChanged("Poolerror");
            }
        }

        /// <summary>
        /// ConfirmedRound indicates the block number this transaction appeared in
        /// </summary>
        [JsonProperty("round")]
        public int? Round 
        { 
            get 
            {
                return this.round; 
            } 
            set 
            {
                this.round = value;
                onPropertyChanged("Round");
            }
        }

        /// <summary>
        /// TxID is the transaction ID
        /// </summary>
        [JsonProperty("tx")]
        public string Tx 
        { 
            get 
            {
                return this.tx; 
            } 
            set 
            {
                this.tx = value;
                onPropertyChanged("Tx");
            }
        }

        /// <summary>
        /// TransactionResults contains information about the side effects of a transaction
        /// </summary>
        [JsonProperty("txresults")]
        public Models.TransactionResults Txresults 
        { 
            get 
            {
                return this.txresults; 
            } 
            set 
            {
                this.txresults = value;
                onPropertyChanged("Txresults");
            }
        }

        /// <summary>
        /// Type is the transaction type
        /// </summary>
        [JsonProperty("type")]
        public string Type 
        { 
            get 
            {
                return this.type; 
            } 
            set 
            {
                this.type = value;
                onPropertyChanged("Type");
            }
        }
    }
} 