/*
 * AlgodRESTAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using AlgodRESTAPI.Standard;
using AlgodRESTAPI.Standard.Utilities;


namespace AlgodRESTAPI.Standard.Models
{
    public class Block : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string currentProtocol;
        private long? frac;
        private string hash;
        private string nextProtocol;
        private int nextProtocolApprovals;
        private int nextProtocolSwitchOn;
        private int nextProtocolVoteBefore;
        private int period;
        private string previousBlockHash;
        private string proposer;
        private int? rate;
        private int? reward;
        private long round;
        private string seed;
        private long timestamp;
        private string txnRoot;
        private Models.TransactionList txns;
        private bool upgradeApprove;
        private string upgradePropose;

        /// <summary>
        /// CurrentProtocol is a string that represents the current protocol
        /// </summary>
        [JsonProperty("currentProtocol")]
        public string CurrentProtocol 
        { 
            get 
            {
                return this.currentProtocol; 
            } 
            set 
            {
                this.currentProtocol = value;
                onPropertyChanged("CurrentProtocol");
            }
        }

        /// <summary>
        /// The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits
        /// MicroAlgos for every reward unit in the next round.
        /// </summary>
        [JsonProperty("frac")]
        public long? Frac 
        { 
            get 
            {
                return this.frac; 
            } 
            set 
            {
                this.frac = value;
                onPropertyChanged("Frac");
            }
        }

        /// <summary>
        /// Hash is the current block hash
        /// </summary>
        [JsonProperty("hash")]
        public string Hash 
        { 
            get 
            {
                return this.hash; 
            } 
            set 
            {
                this.hash = value;
                onPropertyChanged("Hash");
            }
        }

        /// <summary>
        /// NextProtocol is a string that represents the next proposed protocol
        /// </summary>
        [JsonProperty("nextProtocol")]
        public string NextProtocol 
        { 
            get 
            {
                return this.nextProtocol; 
            } 
            set 
            {
                this.nextProtocol = value;
                onPropertyChanged("NextProtocol");
            }
        }

        /// <summary>
        /// NextProtocolApprovals is the number of blocks which approved the protocol upgrade
        /// </summary>
        [JsonProperty("nextProtocolApprovals")]
        public int NextProtocolApprovals 
        { 
            get 
            {
                return this.nextProtocolApprovals; 
            } 
            set 
            {
                this.nextProtocolApprovals = value;
                onPropertyChanged("NextProtocolApprovals");
            }
        }

        /// <summary>
        /// NextProtocolSwitchOn is the round on which the protocol upgrade will take effect
        /// </summary>
        [JsonProperty("nextProtocolSwitchOn")]
        public int NextProtocolSwitchOn 
        { 
            get 
            {
                return this.nextProtocolSwitchOn; 
            } 
            set 
            {
                this.nextProtocolSwitchOn = value;
                onPropertyChanged("NextProtocolSwitchOn");
            }
        }

        /// <summary>
        /// NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round)
        /// </summary>
        [JsonProperty("nextProtocolVoteBefore")]
        public int NextProtocolVoteBefore 
        { 
            get 
            {
                return this.nextProtocolVoteBefore; 
            } 
            set 
            {
                this.nextProtocolVoteBefore = value;
                onPropertyChanged("NextProtocolVoteBefore");
            }
        }

        /// <summary>
        /// Period is the period on which the block was confirmed
        /// </summary>
        [JsonProperty("period")]
        public int Period 
        { 
            get 
            {
                return this.period; 
            } 
            set 
            {
                this.period = value;
                onPropertyChanged("Period");
            }
        }

        /// <summary>
        /// PreviousBlockHash is the previous block hash
        /// </summary>
        [JsonProperty("previousBlockHash")]
        public string PreviousBlockHash 
        { 
            get 
            {
                return this.previousBlockHash; 
            } 
            set 
            {
                this.previousBlockHash = value;
                onPropertyChanged("PreviousBlockHash");
            }
        }

        /// <summary>
        /// Proposer is the address of this block proposer
        /// </summary>
        [JsonProperty("proposer")]
        public string Proposer 
        { 
            get 
            {
                return this.proposer; 
            } 
            set 
            {
                this.proposer = value;
                onPropertyChanged("Proposer");
            }
        }

        /// <summary>
        /// The number of new MicroAlgos added to the participation stake from rewards at the next round.
        /// </summary>
        [JsonProperty("rate")]
        public int? Rate 
        { 
            get 
            {
                return this.rate; 
            } 
            set 
            {
                this.rate = value;
                onPropertyChanged("Rate");
            }
        }

        /// <summary>
        /// RewardsLevel specifies how many rewards, in MicroAlgos,
        /// have been distributed to each config.Protocol.RewardUnit
        /// of MicroAlgos since genesis.
        /// </summary>
        [JsonProperty("reward")]
        public int? Reward 
        { 
            get 
            {
                return this.reward; 
            } 
            set 
            {
                this.reward = value;
                onPropertyChanged("Reward");
            }
        }

        /// <summary>
        /// Round is the current round on which this block was appended to the chain
        /// </summary>
        [JsonProperty("round")]
        public long Round 
        { 
            get 
            {
                return this.round; 
            } 
            set 
            {
                this.round = value;
                onPropertyChanged("Round");
            }
        }

        /// <summary>
        /// Seed is the sortition seed
        /// </summary>
        [JsonProperty("seed")]
        public string Seed 
        { 
            get 
            {
                return this.seed; 
            } 
            set 
            {
                this.seed = value;
                onPropertyChanged("Seed");
            }
        }

        /// <summary>
        /// TimeStamp in seconds since epoch
        /// </summary>
        [JsonProperty("timestamp")]
        public long Timestamp 
        { 
            get 
            {
                return this.timestamp; 
            } 
            set 
            {
                this.timestamp = value;
                onPropertyChanged("Timestamp");
            }
        }

        /// <summary>
        /// TransactionsRoot authenticates the set of transactions appearing in the block.
        /// More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order.
        /// For the empty block, it's 0.
        /// Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves.
        /// Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot.
        /// </summary>
        [JsonProperty("txnRoot")]
        public string TxnRoot 
        { 
            get 
            {
                return this.txnRoot; 
            } 
            set 
            {
                this.txnRoot = value;
                onPropertyChanged("TxnRoot");
            }
        }

        /// <summary>
        /// TransactionList contains a list of transactions
        /// </summary>
        [JsonProperty("txns")]
        public Models.TransactionList Txns 
        { 
            get 
            {
                return this.txns; 
            } 
            set 
            {
                this.txns = value;
                onPropertyChanged("Txns");
            }
        }

        /// <summary>
        /// UpgradeApprove indicates a yes vote for the current proposal
        /// </summary>
        [JsonProperty("upgradeApprove")]
        public bool UpgradeApprove 
        { 
            get 
            {
                return this.upgradeApprove; 
            } 
            set 
            {
                this.upgradeApprove = value;
                onPropertyChanged("UpgradeApprove");
            }
        }

        /// <summary>
        /// UpgradePropose indicates a proposed upgrade
        /// </summary>
        [JsonProperty("upgradePropose")]
        public string UpgradePropose 
        { 
            get 
            {
                return this.upgradePropose; 
            } 
            set 
            {
                this.upgradePropose = value;
                onPropertyChanged("UpgradePropose");
            }
        }
    }
} 